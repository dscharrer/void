#!/bin/bash

# Play files/directories
# Usage: play [mplayer2-flags] paths...

paths=()
flags=(--msg-color --fs --cache 8000 --no-sub --alang eng --cache-pause=no)
#flags=(-msgmodule -msgcolor -fs -cache 8000)
find_args=( -type f )

driver='unknown'
for arg in $(cat /proc/cmdline); do
	case "$arg" in gpu_driver=*)
		driver="${arg#gpu_driver=}"
	esac
done
case "$driver" in
	fglrx)  flags+=( --vo=xv ) ;;
	radeon) flags+=( --vo=vdpau --hwdec=vdpau ) ;;
esac

mode=0
for arg in "$@" ; do
	
	if [ $mode != 2 ] ; then
		case "$arg" in
			--) mode=2 ; continue ;;
			-*) mode=1 ; flags+=("$arg") ; continue ;;
		esac
	fi
	
	# Treat tokens after -options as arguments
	if [ $mode = 1 ] ; then
		mode=0 ; flags+=("$arg") ; continue
	fi
	
	paths+=("$arg")
	
done

files=()

for path in "${paths[@]}" ; do
	
	# Pass on URLs as literal paths, but keep their order
	case "$path" in
		*://*) files+=("$path") ; continue ;;
	esac
	
	# Treat other paths as possible directories and search for files
	while IFS= read -r -d '' file; do
		files+=("$file")
	done < <(find "$path" "${find_args[@]}" -print0 | sort -z)
	
done

# If no paths were given, search in the current directory
if [ ${#paths[@]} = 0 ] ; then
	while IFS= read -r -d '' file; do
		files+=("$file")
	done < <(find "${find_args[@]}" -print0 | sort -z)
fi

if [ ${#files[@]} = 0 ] ; then echo 'No files found!' ; exit 1 ; fi

exec mpv "${flags[@]}" -- "${files[@]}"
