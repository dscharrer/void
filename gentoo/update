#!/bin/sh

if [ "$(id -u)" != '0' ] ; then
  exec su -c "$0 $@"
fi

# Ze colors
red='' ; green='' ; blue='' ; white='' ; reset=''
if [ -t 1 ] && [ `tput colors` != -1 ] ; then
	red=`printf '\033[1;31m'`
	green=`printf '\033[1;32m'`
	blue=`printf '\033[1;34m'`
	white=`printf '\033[1;37m'`
	reset=`printf '\033[0m'`
fi

# Queries the user for yes/no input
# Usage: query <message> [<default>]
query() {
	
	message="$1"
	
	default="$2"
	case "$default" in
		'Y' )            message="$message [Yn] " ;;
		'N' )            message="$message [yN] " ;;
		* ) default='' ; message="$message [yn] " ;;
	esac
	
	while true; do
		echo -n "${message}"
		read -r yn
		[ "$yn" = '' ] && yn="$default"
		case "$yn" in
			'Y'|'y'|'yes'|'Yes'|'YES' ) return 0 ;;
			'N'|'n'|'no'|'No'|'NO' )    return 1 ;;
			'' ) echo "Missing input." ;;
			* ) echo "Invalid input: ${yn}" ;;
		esac
	done
}

has() {
	which "$1" &> /dev/null
}

step() {
	echo "${blue}=====> ${green}$1${reset}"
}

action() {
	quiet=0
	if [ "$1" = "--quiet" ] ; then
		quiet=1 ; shift
	fi
	while true ; do
		if [ $quiet = 1 ]
			then "${@}" > /dev/null && return
			else "${@}" && return
		fi
		query "${red}$1 failed! ${white}Retry?${reset}" 'Y' || return
	done
}

step 'Syncing Portage Tree'
action emerge --sync --quiet

if has layman ; then
	step 'Syncing Overlays'
	action layman --sync-all --quiet
fi

if has eix-update || has q ; then
	step 'Updating Cache'
	has eix-update && action eix-update --quiet
	has q && action q --reinitialize --metacache
fi

step 'Updating Portage'
action emerge --update --quiet-build sys-apps/portage

step 'Updating Config Files'
action dispatch-conf

step 'Updating Packages'
action emerge -avDNu --with-bdeps=y --quiet-build --keep-going @world

step 'Updating Preserved Packages'
action emerge -av --quiet-build --keep-going @preserved-rebuild

step 'Updating Config Files'
action dispatch-conf

step 'Cleaning Unused Dependencies'
action emerge --ask --depclean

if has lafilefixer ; then
	step 'Fixing .la Files'
	action --quiet lafilefixer --justfixit
fi

step 'Checking Linking Consistency'
action revdep-rebuild -- --ask --verbose --quiet-build --keep-going

if has prelink ; then
	step 'Pre-Linking'
	# Not an action because it currently fails
	prelink -amR > /dev/null
fi

step 'Mooing'
action emerge --moo
